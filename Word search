class Solution {
    public boolean exist(char[][] board, String word) {
        
        boolean [][]vis = new boolean [board.length][board[0].length];
        boolean ans=false;
      for(int i=0;i<board.length;i++){
       for(int j=0;j<board[0].length;j++)   
     ans =ans||find(board,word,0,i*board[0].length+j,vis);
          
      }  
    return ans;
    }
    public boolean find(char [][]board , String word,int idx,int i,boolean [][]vis){
        if(idx==word.length()){
            return true;
        }
        int x=i/board[0].length;
           int y=i%board[0].length;
           
        if(x<0||y<0||x>=board.length||y>=board[0].length||word.charAt(idx)!=board[x][y]||vis[x][y])
            return false;
          
          //if(i==board.length*board[0].length)return false;
       // vis[x][y]=true;
          boolean res=false;
       // if(x>=0&&y>=0&&x<board.length&&y<board[0].length){
        if(board[x][y]==word.charAt(idx))
        {  // idx++;
                                        vis[x][y]=true;

            int dire[][]={{0,1},{1,0},{-1,0},{0,-1}};
            for(int l=0;l<dire.length;l++){
                int x1=x+dire[l][0];
                int y1=y+dire[l][1];
                //if(x1>=0&&y1>=0&&x1<board.length&&y1<board[0].length)
                //{
                 i=x1*board[0].length+y1;
                if(x1>=0&&y1>=0&&x1<board.length&&y1<board[0].length&&!vis[x1][y1])
                 res=res|| find(board,word,idx+1,i,vis);
                   // if(res)break;
                //}
                
            }
                             vis[x][y]=false;

        }
        
        
           //res=res||find(board,word,idx,i+1,vis);
        if(idx+1==word.length())return true;
        return res;
    
    //    return false;
}
}
