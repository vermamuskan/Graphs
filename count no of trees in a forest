https://ide.geeksforgeeks.org/w2sJD641Aj

import java.io.*;
import java.lang.*;
import java.util.*;



    class GFG  
{  
    
   static class Graph{
        private int V; // No. of vertices  
  
    // Array of lists for Adjacency List Representation  
    private LinkedList<Integer> adj[];  
  
    // Constructor  
    Graph(int v)  
    {  
        V = v;  
        adj = new LinkedList[v];  
        for (int i = 0; i <  v; ++i)  
            adj[i] = new LinkedList<>();  
    }  
        
    
  
    //Function to add an edge into the graph  
    void addEdge(int v, int w)  
    {  
        adj[v].add(w); // Add w to v's list.  
    }  
  
    }
    
    static int ans=0;
	public static void dfs(Graph g,int v,boolean[]vis){
	    vis[v]=true;
	    for(int i:g.adj[v]){
	        if(!vis[i])dfs(g,i,vis);
	           }
       	    
	    
	}
	public static void main (String[] args) {
      Graph g = new Graph(5);  
  
        g.addEdge(0, 1);  
        g.addEdge(0, 2);  
        g.addEdge(3, 4);
        boolean []vis=new boolean[5];
        for(int i=0;i<5;i++){ 
          if(!vis[i])
           {dfs(g,i,vis);
            ans++;
        }
            
        }
        System.out.println(ans);
	}
}
